services:
  postgres:
    image: postgres:15
    container_name: fhir_pg
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-postgres}
    ports:
      - "5432:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 12
      start_period: 5s

  connector:
    build:
      context: ./connector
      dockerfile: Dockerfile
    container_name: fhir_connector
    restart: unless-stopped
    env_file:
      - .env
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      WAIT_TIMEOUT: ${WAIT_TIMEOUT:-120}
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "9464:9464"   # Prometheus metrics endpoint (exporter)
    volumes:
      - ./connector:/app:delegated
      - connector_node_modules:/app/node_modules
      - ./connector/wait-for-postgres.sh:/usr/local/bin/wait-for-postgres.sh:ro
    command: ["/usr/local/bin/wait-for-postgres.sh", "node", "index.js"]

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    depends_on:
      - connector

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    environment:
      GF_SECURITY_ADMIN_USER: ${GF_SECURITY_ADMIN_USER:-admin}
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD:-admin}
      GF_USERS_ALLOW_SIGN_UP: "false"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro

volumes:
  connector_node_modules:
  prometheus_data:
  grafana_data: